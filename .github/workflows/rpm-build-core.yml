# This is a basic workflow to help you get started with Actions

name: RPM-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    # branches: [ main ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
    build:
        name: Create RPM Release
        runs-on: ubuntu-latest

        steps:

        - name: Checkout code
          uses: actions/checkout@main
            
        - name: test python3 availability
          id: python3_test
          run: |
            python3 -m pip install --upgrade pip
          
        - name: build RPM package core
          id: rpm_build_core
          run: |
            versiontag=main #the versiontag is also internally stored in the specfile, this should be aligned with this one. Possible are main, branches, tags like v2.3.0
            # download spec from source and rpmbuild from spec
            rpmbuild -v -bb scripts/hatyan_python-latest_python3.spec --define "VERSIONTAG ${versiontag}"
            #echo "RPM was created: ${RPMTOPDIR}/RPMS/x86_64/*.rpm"
